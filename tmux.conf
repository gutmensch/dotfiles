# Change bind key to ctrl-y
unbind-key c-b
set-option -g prefix c-y

set-window-option -g automatic-rename on
#setw -g allow-rename off

set-option -g set-titles on
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on
set-option -g history-limit 202400
set-option -g repeat-time 250
set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",alacritty:RGB"
set-option -g mouse on
set-option -sg escape-time 10
set-option -g focus-events on

set-window-option -g automatic-rename on
set-window-option -g mode-keys vi

bind-key c new-window -c "#{pane_current_path}"

bind-key . split-window -h -c "#{pane_current_path}"
bind-key - split-window -c "#{pane_current_path}"

bind-key j resize-pane -D 3
bind-key k resize-pane -U 3
bind-key h resize-pane -L 3
bind-key l resize-pane -R 3

bind-key s set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# Also copy to system clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i' \; display-message "Copied!"

# Double LMB Select & Copy (Word)
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word-no-clear \; \
    send-keys -X copy-pipe-and-cancel "xclip -sel clip -i" \; \
    display-message "Copied!"
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe-and-cancel "xclip -sel clip -i" \; \
    display-message "Copied!"

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-and-cancel "xclip -sel clip -i" \; \
    display-message "Copied!"
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe-and-cancel "xclip -sel clip -i" \; \
    display-message "Copied!"

# map copy mode to ctrl+k
bind-key -n 'A-k' copy-mode

# Capture pane Alt + w to file
bind-key M-w command-prompt -I "~/tmux.log" -p "Store current pane contents to file:" "capture-pane -b temp-capture-buffer -S -; save-buffer -b temp-capture-buffer %1; delete-buffer -b capture-buffer"

# bind-key -n 'C-o' run 'FILE=/tmp/tmux-capture-$(date +%Y%m%d%H%M%S).txt; tmux capture-pane -J -S -102400 -p > $FILE; tmux new-window "reattach-to-user-namespace vim $FILE"'

# Clear scrollback buffer
bind-key A-l send-keys C-l \; clear-history

set-option -g status-justify left
set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set-option -g status-left-length 16
set-option -g status-bg colour237
set-option -g status-right '#{?pane_synchronized, #[fg=colour196]*SYNC*#[default],}#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set-option -g status-interval 60

set-option -g pane-border-status bottom
set-option -g pane-border-format "#{pane_index} #{pane_current_command}"
set-option -g pane-active-border-style fg=colour245
set-option -g pane-border-style fg=colour243

set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# set-window-option -g window-style 'bg=colour238'
# set-window-option -g window-active-style 'bg=colour237'

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key t run-shell 'tmux send-keys -t #{pane_id} "$(tmux-fzf-words)"'
bind-key T run-shell 'tmux send-keys -t #{pane_id} "$(tmux-fzf-words --all)"'

# Select pane
bind-key 0 run-shell "tmux-fzf-panes || :"

# -------------------------------------------------------------------
# Here be dragons!
# -------------------------------------------------------------------
# Backslash bind-key
# if-shell "test $USER = jg" \
#   'unbind C-a; set-option -g prefix \\ ; bind-key ] send-prefix; bind-key p paste-buffer; bind-key \\ last-window'
# 
# # Bind-key switch
# bind-key F9  set-option -g prefix C-a   \;\
#              bind-key a send-prefix     \;\
#              bind-key p previous-window \;\
#              bind-key C-a last-window
# bind-key F10 set-option -g prefix "\\"  \;\
#              bind-key ] send-prefix     \;\
#              bind-key p paste-buffer    \;\
#              bind-key "\\" last-window
# 
# # TPM
# set -g @plugin 'junegunn/tmux-fzf-url'
# set -g @plugin 'junegunn/tmux-fzf-maccy'
# run '~/.tmux/plugins/tpm/tpm'
